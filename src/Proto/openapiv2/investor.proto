syntax = "proto3";

package aham.investor;

option go_package = "aham/investor";
option csharp_namespace = "AHAM.Services.Commission.Investor.Grpc";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "dto.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  host:"localhost:8080";
  info: {
    title: "AHAM MT-Space - Commission HTTP API";
    version: "1.0";
  };
};

service InvestorService {
  rpc GetRebates(GetRebatesRequest) returns (GetRebatesResponse) {
    option (google.api.http) = {
      get : "/rebates"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List rebates"
      description: "List all fee rebates from database."
    };
  }

  rpc GetInvestors(GetInvestorsRequest) returns (GetInvestorsResponse) {
    option (google.api.http) = {
      get: "/investors"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List investors"
      description: "List all investors from database."
    };
  }

  rpc CreateRebate(CreateRebateRequest) returns (CreateRebateResponse) {
    option (google.api.http) = {
      post : "/rebate/create"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add rebate"
      description: "Add fee rebate to database."
    };
  }
}

message GetRebatesRequest {
  string investor_id = 1;
  string coa = 2;
  int32 index = 3;
  int32 size = 4;
  int32 from = 5;
}

message GetRebatesResponse { 
  repeated aham.dto.FeeRebateDTO rebates = 1; 
}

message GetInvestorsRequest {
  string investor_id = 1;
  string investor_name = 2;
  int32 index = 3;
  int32 size = 4;
  int32 from = 5;
}

message GetInvestorsResponse {
  repeated aham.dto.InvestorDTO investors = 1; 
}

message CreateRebateRequest {
  repeated aham.dto.FeeRebateDTO rebates = 1;
}

message CreateRebateResponse {
  bool status = 1;
  string message = 2;
}